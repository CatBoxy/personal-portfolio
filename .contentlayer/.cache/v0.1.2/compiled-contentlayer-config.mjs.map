{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\r\n  defineDocumentType,\r\n  defineNestedType,\r\n  makeSource,\r\n} from 'contentlayer/source-files';\r\n\r\nimport readingTime from 'reading-time';\r\nimport rehypeCodeTitles from 'rehype-code-titles';\r\nimport rehypePrism from 'rehype-prism-plus';\r\nimport remarkGfm from 'remark-gfm';\r\nimport rehypeSlug from 'rehype-slug';\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\r\n\r\nconst computedFields = {\r\n  readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\r\n  wordCount: {\r\n    type: 'number',\r\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\r\n  },\r\n  slug: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, ''),\r\n  },\r\n};\r\n\r\nconst Author = defineNestedType(() => ({\r\n  name: 'Author',\r\n  fields: {\r\n    name: { type: 'string', required: true },\r\n    image: { type: 'string', required: true },\r\n  },\r\n}));\r\n\r\nconst Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: 'blog/*.mdx',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    publishedAt: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    category: { type: 'string', required: true },\r\n    author: {\r\n      type: 'nested',\r\n      of: Author,\r\n    },\r\n  },\r\n  computedFields,\r\n}));\r\n\r\nconst contentLayerConfig = makeSource({\r\n  contentDirPath: 'data',\r\n  documentTypes: [Post],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      rehypeCodeTitles,\r\n      rehypePrism,\r\n      [\r\n        rehypeAutolinkHeadings,\r\n        {\r\n          properties: {\r\n            className: ['anchor'],\r\n          },\r\n        },\r\n      ],\r\n    ],\r\n  },\r\n});\r\n\r\nexport default contentLayerConfig;\r\n"],
  "mappings": ";AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,iBAAiB;AAAA,EACrB,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EACzE,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,EAChD;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAChE;AACF;AAEA,IAAM,SAAS,iBAAiB,MAAO;AAAA,EACrC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AACF,EAAE;AAEF,IAAM,OAAO,mBAAmB,MAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
