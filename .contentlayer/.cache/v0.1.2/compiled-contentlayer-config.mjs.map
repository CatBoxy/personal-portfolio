{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from 'contentlayer/source-files';\n\nimport readingTime from 'reading-time';\nimport rehypePrism from 'rehype-prism-plus';\nimport remarkGfm from 'remark-gfm';\nimport rehypeCodeTitles from 'rehype-code-titles';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\n\nconst computedFields = {\n  readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n  wordCount: {\n    type: 'number',\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n  },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, ''),\n  },\n};\n\nconst Author = defineNestedType(() => ({\n  name: 'Author',\n  fields: {\n    name: { type: 'string', required: true },\n    image: { type: 'string', required: true },\n  },\n}));\n\nconst Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: 'posts/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    publishedAt: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    category: { type: 'string', required: true },\n    author: {\n      type: 'nested',\n      of: Author,\n    },\n    image: { type: 'string', required: true },\n  },\n  computedFields,\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: 'data',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypePrism,\n      rehypeCodeTitles,\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor'],\n          },\n        },\n      ],\n    ],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": ";AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,iBAAiB;AAAA,EACrB,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG,EAAE;AAAA,EACzE,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,EAChD;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAAA,EAChE;AACF;AAEA,IAAM,SAAS,iBAAiB,MAAO;AAAA,EACrC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AACF,EAAE;AAEF,IAAM,OAAO,mBAAmB,MAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC3C,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,IACA,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AAAA,EACA;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
